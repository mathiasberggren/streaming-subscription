// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  subscriptions Subscription[]

  @@map("users")
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  image     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  subscriptions Subscription[]

  @@map("companies")
}

model Subscription {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int      @map("company_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  credential SubscriptionCredential?

  @@unique([userId, companyId])
  @@index([userId, companyId])
  @@map("subscriptions")
}

model SubscriptionCredential {
  id             Int          @id @default(autoincrement())
  subscription   Subscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId Int          @unique @map("subscription_id")
  username       String
  password       String
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")

  @@map("subscription_credentials")
}
